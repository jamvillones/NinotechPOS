<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAbwAAAOUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAANgAAAAvAAAAAAAAAAAAAAAAAAAAqgAAAPcAAACUAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAWQAAAEQAAACzAAAAsQAAAAAAAAAAAAAAIgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP0AAABrAAAAdgAAAMQAAAAAAAAAAAAAACcAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA3gAAAHYAAADEAAAAAAAAAAAAAAAnAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOsAAAB2AAAAxAAAAAAAAAAAAAAAJwAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADrAAAAdgAAAMQAAAAAAAAAAAAAACcAAAD/AAAA/wAA
        APsAAAD5AAAA/wAAAP8AAAD+AAAA9gAAAP8AAAD/AAAA6wAAAHYAAADEAAAAAAAAAAAAAAAnAAAA/wAA
        AP8AAADrAAAAPQAAAOAAAADvAAAAWQAAAMQAAAD/AAAA/wAAAOsAAAB2AAAAxAAAAAAAAAAAAAAAJwAA
        AP8AAAD/AAAA6wAAAAAAAAALAAAAFQAAAAAAAADEAAAA/wAAAP8AAADrAAAAdgAAAMQAAAAAAAAAAAAA
        ACcAAAD/AAAA/wAAAOsAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAP8AAAD/AAAA6wAAAHYAAADEAAAAAAAA
        AAAAAAAnAAAA/wAAAP8AAADrAAAAAAAAAAAAAAAAAAAAAAAAAMQAAAD/AAAA/wAAAOsAAAB2AAAAxAAA
        AAAAAAAAAAAAJwAAAP8AAAD/AAAA6wAAAAAAAAAAAAAAAAAAAAAAAADEAAAA/wAAAP8AAADrAAAAdgAA
        AMQAAAAAAAAAAAAAACcAAAD/AAAA/wAAAOsAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAP8AAAD/AAAA6wAA
        AHYAAADEAAAAAAAAAAAAAAAnAAAA/wAAAP8AAAD2AAAABAAAAAAAAAAAAAAAAAAAALcAAAD/AAAA/wAA
        APQAAADQAAAAnQAAAAAAAAAAAAAAFgAAAP4AAAD/AAAA/wAAAI4AAAA2AAAAMwAAADMAAAB0AAAA8gAA
        AP8AAADwAAAAoAAAABYAAAAAAAAAAAAAAAAAAAB3AAAA7gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADkAAAATQAAAAAAAAAAAAAAAPADAADH+QAAwA0AAMAFAADABQAAwAUAAMAFAADEhQAAx4UAAMeF
        AADHhQAAx4UAAMeFAADHgQAAw8MAAOAPAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAACyAAAA9gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADnAAAAiAAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAACaAAAA/QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAuAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAA1wAAAP8AAAD/AAAA7gAA
        AJIAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAtwAAAP8AAAD/AAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMkAAAD/AAAA/wAA
        AN4AAABaAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAA
        AEIAAAASAAAAAAAAAAAAAAAGAAAA9gAAAP8AAACCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPMAAABkAAAAAAAAAAAAAADrAAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AE8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAABAAAAAAAAAAOsAAAD/AAAAiQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAATwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAALUAAAAAAAAA6wAAAP8AAACJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABPAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA1gAAAAAAAADrAAAA/wAA
        AIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADYAAAAAAAA
        AOsAAAD/AAAAiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ANgAAAAAAAAA6wAAAP8AAACJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA2AAAAAAAAADrAAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADYAAAAAAAAAOsAAAD/AAAAiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAAAAAA6wAAAP8AAACJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABPAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADwAAAA7AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAADfAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAAAAAAAADrAAAA/wAAAIkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAE8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAjAAAAxQAAAP8AAAD/AAAA/wAA
        AP8AAADoAAAASwAAAIkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADYAAAAAAAAAOsAAAD/AAAAiQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAAAAAAAAACAAAAdwAA
        APgAAAD/AAAAqwAAABMAAAAAAAAAiQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAAAAAA6wAA
        AP8AAACJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADYAAAAAAAA
        AAAAAAAAAAAAJwAAAE4AAAAAAAAAAAAAAAAAAACJAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAA
        AAAAAADrAAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADYAAAAAAAAAOsAAAD/AAAAiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAANgAAAAAAAAA6wAAAP8AAACJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAAAAAAAADrAAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AE8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADYAAAAAAAAAOsAAAD/AAAAiQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAATwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAiQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAAAAAA6wAAAP8AAACJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABPAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACJAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAAAAAAAADrAAAA/wAA
        AIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADYAAAAAAAA
        AOsAAAD/AAAAiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA2AAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ANgAAAAAAAAA6wAAAP8AAACJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA2AAAAAAAAADsAAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAANsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIcAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADYAAAANwAAAP4AAAD/AAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA9AAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD+AAAA/wAAAPQAAAAhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABJAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAARAAAA5gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADyAAAAVAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABsAAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAAqgAAAGsAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAAB9AAAA3AAAAP8AAAD/AAAA/wAAAP8AAADIAAAAfAAAAB8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6QAAAB4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAGUAAADNAAAA+AAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA7AAAALUAAAAoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAA/8AAAH+D//x/D//+PwAADj8AAAY/AAACPwAAAj8AAAI/AA
        ACPwAAAj8AAAI/AAACPwAAAj8CBAI/A4wCPwP8Aj8D/AI/A/wCPwP8Aj8D/AI/A/wCPwP8Aj8D/AI/A/
        wCPwP8Aj8D/AJ/A/4AfwP+AP8A/wP/AAAH/8AAD/
</value>
  </data>
</root>