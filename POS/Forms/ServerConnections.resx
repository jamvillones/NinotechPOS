<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9pIkHPOWIVXzliFV8ZYgOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPOWIVX0oTj/9rBY//OXIasAAAAAAAAAAPSWInLzlyGr85chq/OXIavzlyGr9JYicgAA
        AAAAAAAAr6WPMK2ljyLzliFV9Joo//SgNv/zlyGrAAAAAAAAAADzlyGr85Yh//e9dP/3vHL/85Yh//OX
        IasAAAAArqOQt66kkdKto5Cc85YhVc+FJv+8fCj/85chqwAAAAAAAAAA85chq/OWIf/0njP/9J4y//OW
        If/zlyGrAAAAAK6kkKqqqogPAAAAAPOWIVWqcyr/hmEw//OXIasAAAAAAAAAAPOXIau8fCj/vHwo/7x8
        KP+8fCj/85chqwAAAACupJCqAAAAAAAAAADzliFVz4Um/7x8KP/zlyGrAAAAAAAAAADzlyGrT0c3/09H
        N/9CZUH/QmVB//OXIautpJI4rqOQvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA85chq7x8
        KP+8fCj/vHwo/7x8KP/zlyGrraSSOK6jkL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOX
        IatPRzf/T0c3/0JlQf9CZUH/85chqwAAAACupJCqAAAAAAAAAADzliFV9Joo//SgNv/zlyGrAAAAAAAA
        AADzlyGrvHwo/7x8KP+8fCj/vHwo//OXIasAAAAArqSQqqqqiA8AAAAA85YhVfShOP/2sFj/85chqwAA
        AAAAAAAA85chq09HN/9PRzf/QmVB/0JlQf/zlyGrAAAAAK6jkbeupJHHraOQnPOWIVXzliH/85Yh//OX
        IasAAAAAAAAAAPSWInLzlyGr85chq/OXIavzlyGr9JYicgAAAAAAAAAAr6WPMK2ljyLzliFVqXMr/4Vh
        MP/zlyGrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA85YhValz
        K/+FYTD/85chqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPaS
        JBzzliFV85YhVfGWIDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//EAAMPxAACBEQAAgXEAAIFxAACBfwAAgX8AAIFx
        AACBcQAAgREAAMPxAAD/8QAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        5gf///4H///+B////gf///8H////////////////
</value>
  </data>
</root>