<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZFpFfWVXQyYAAAAAv2YVlMBl
        Ff/AZRX/wGUV/8BlFf/AZRX/wGUV/b5lFD8AAAAAAAAAAGZVRA9kWkXMZFpF/2RaReNkWkXpYVVJFcBl
        FarAZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZhVVAAAAAAAAAABkWkRPZFpFvAAAAAFkWUR7YlxIJwAA
        AADAZRWqwGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGYVVQAAAAAAAAAAY1pFVWVaRaoAAAAAAAAAAAAA
        AAAAAAAAwGUVqsBlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BmFVUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMBlFarAZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZhVVAAAAAAAAAAAAAAAA49ZglOTV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NRg/8mBKP/AZRX/wGUV/8BlFf/AZRX/wGYVVQAAAAAAAAAAAAAAAOTV
        Yqrk1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/Mii7/wGUV/8BlFf/AZRX/wGUV+r5lFD8AAAAAAAAAAAAA
        AADk1WKq5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVgVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5NViquTVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOTVYqrk1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WBVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADk1WKq5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVgVQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5NVhkOTVYf/k1WH/5NVh/+TVYf/k1WH/5NVh+uPXYT8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/gMAAMIDAADeAwAA3gMAAP4DAADAAwAAwAMAAMB/
        AADAfwAAwH8AAMB/AADAfwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        Ff/AZRX/wGUVqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk1WBV5NVh/+TVYf/k1WH/5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/9iwSP/AZRX/wGUV/8BlFf/AZRX/wGUV/8Bl
        Ff/AZRX/wGUV/8BlFfbBZBZeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTVYFXk1WH/5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NViqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5NVgVeTV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WKqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADk1WBV5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TV
        YqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOTVYFXk1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TV
        Yf/k1WH/5NViqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5NVgVeTVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WKqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk1WBV5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTVYFXk1WH/5NVh/+TVYf/k1WH/5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NViqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5NVgVeTVYf/k1WH/5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WKqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk1WFU5NVh/+TV
        Yf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYqoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOfX
        YCDk1WHh5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH/5NVh/+TVYf/k1WH25NZiXgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////gAP/54AB/gOAAfwDgAH454AB+f+
        AAfn/gAH5/4AB//+AAf//gAH+AAAB/gAAAf4AAAH+AAAD/gAH//4AB//+AAf//gAH//4AB//+AAf//gA
        H//4AB//+AAf//gAP///////////////////////
</value>
  </data>
</root>