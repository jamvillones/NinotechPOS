<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARLSURBVGhD7Zn9T1tVGMf5d3yZW1yWaJzJko2XAQUKLciconMwC7QFN5D2UmWJZksWZzQYFWf2
        ItsUXwqs3frCS6HtqKEvFDaWaFR+WMxcpBlj9oVfHs+5vafes55LhnK5dblP8knbe5/e8/3cc2+T3lOk
        llpqqaVWQZXOaHlRZ7J+oTdxTr3J4lUWzqkzcgN6M7dbiPdoVWeyfIAkoDCxnBJirl91Zq4Of6G+oxc+
        PHsZrvoC4A2EFAVnOH32Ep8JZ0MzpBXiSpfeZB3FzWeGRiCRSBQUA9/YsyJGq12IK106s2UeNwfDc8yD
        KUkwHCOXWFyIK13oJr+Bm2eicebBlARn4kVQRiGudEmJeJZWoP/m/S0FjynOsCkiXGQVnria3FLwmOIM
        qoj4IN3hVdjpTsIOV4o5qJinryXhWdSLeQq9Z/WI2TN2B5oCi7DLnaC2yyJyaOYvqPaneIp9KdiGAm5z
        JWGnJwnPoNcnhcC7x5JQJfRhKv1JeN4rLX8wcAvSCQ5gpRtu3z0Bz3mWc/tkF+EDTqeowKVIbs94kuoR
        s0sQ3o4gQfH7iaVBXoJwaiHIn6AdiB50FYgzyCLyX9Cgk/ACmrmKqRQM/eygRGyxxVwfHlOcQTYRje82
        en2Qt30jNARXYPQXOyz+3g8Diz5q35aIlA1/CnvPlULJ1x1QM70KdYE0tf9hagMp0DK2r4dsIloUpgYN
        UOGa4iUITa7P4PiNNeDm1+DVUDYEDo17G6+noWsuw+/HWOJr0BT6Rxr3SQnKItIZSUMfDhL9A0oG6ymR
        vefLoPP6LB8U95Dg7y5kIRIE3GMIp6EHSZG+9kiGP1FYAM9uRzQDR2MpKsOmiByLYpEM6OxWWkKg/GIj
        2OaW80JvFNtCBnrnsycCjynOsGkihskrTAlCw8jxvGAYW/xPaHB1gc7RCj3R35g9LGQRMc78CiUXqpkC
        YtqmvFQYPIsvu/ug0l7Do3e2oUvpAdUjhSwiLzn6mcEfpmxQD9bYnVyYtqAjJ0F4Y/JzKjChK+SG1sk+
        6J7185/lEbnyETM4i9rv30IzkUY/DEtQNdyQJ6Kxa6HzxxAlYYnE4Ii3DVq8rYh24KI/KS+COTyG/mNf
        68yTINSMNkFv/C4v8c78Mrw5/rYgkcUwYYOjkXtUBkVE9p3fD+XfVTElCAe97/Ei5sAAJUEwBujnBoqI
        YIq/KoMKhoCYFt8nTAlMu/8SlUExEUzp5QqmAEFjr4VD7pbCF8Hs/1bDlCBoR+qh2fM/ENl3oRQqf6hm
        ShAana8Uvgim+GI5U4CAf5JfdzXLL/L+bBhaxoclec19Bg44T67LkSk7GPwOaPZ9CYcnPs7DMH0OjoUm
        cpyO36QybIpIIbAxkcflkelj8xBbb7ZU4WayrDDsmYQRr09RcAbxsgK6aiqFuOsXXkzhv1CImK0nhZiP
        VuiG4pfeEEMFwb9ZelNLLbXUUkveKir6GzekICXBfe5KAAAAAElFTkSuQmCC
</value>
  </data>
</root>